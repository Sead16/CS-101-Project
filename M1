#1
def s(dna):    
    dna = dna.upper()
    count_A = dna.count('A')
    count_C = dna.count('C')
    count_G = dna.count('G')
    count_T = dna.count('T')
    dict_dna = {
        'A' : count_A ,
        'C' : count_C ,
        'G' : count_G ,
        'T' : count_T
        }
    return dict_dna
    
#2    
def dna2rna(dna):
    rna = ''
    for symbol in dna:
        if symbol == 'A':
            rna = rna + 'A'
        if symbol == 'T':
            rna = rna + 'U'
        elif symbol == 'G':
            rna = rna + 'G'
        elif symbol == 'C':
            rna = rna + 'C'
    return rna


#3
def reverse_complement(dna):
    reverse_complement = ''
    for symbol in dna:
        if symbol == 'A':
            reverse_complement = reverse_complement + 'T'
        elif symbol == 'T':
            reverse_complement = reverse_complement + 'A'
        elif symbol == 'C':
            reverse_complement = reverse_complement + 'G'
        elif symbol == 'G':
            reverse_complement = reverse_complement + 'C'
    reverse_complement = reverse_complement[::-1]
    return reverse_complement


def mendels_law(hom, het, rec):



def fibonacci_rabbits(n, k):



gc_content(dna_list):


rna2codon(rna):




locate_substring(dna_snippet, dna):


hamming_dist(dna1, dna2)：




count_dom_phenotype(genotypes)：




source_rna(protein):



splice_rna(dna, intron_list):
